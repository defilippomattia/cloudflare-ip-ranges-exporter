name: ci

env:
  GO_VERSION: 1.24.4
  GOLANG_CI_LINT_VERSION: v2.1.6 # https://github.com/golangci/golangci-lint
  GOSEC_VERSION: v2.22.4 # https://github.com/securego/gosec
  GOVULNCHECK_VERSION: v1.1.4 # https://github.com/golang/vuln

permissions:
  contents: write
# on:
#   push:
#     branches-ignore:
#       - main
#   pull_request:
#     branches:
#       - main

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main


jobs:
  golint:
    name: go-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ env.GOLANG_CI_LINT_VERSION }}

      - name: Run golangci-lint
        run: |
          golangci-lint run --config .golangci-lint.yml

  gosec:
    name: gosec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
  
      - name: Install gosec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ env.GOSEC_VERSION }}
    
      - name: Run gosec
        run: |
          gosec ./...


  govulncheck:
    name: govulncheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@${{ env.GOVULNCHECK_VERSION }}

      - name: Run govulncheck
        run: |
          govulncheck ./...
  gotest:
    name: go-test
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout source code
        uses: actions/checkout@v4

      # https://github.com/actions/setup-go  
      - name: Download Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Go tests
        run: |
          go test -v ./...

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [golint, gosec, govulncheck, gotest]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binaries
        run: |
          mkdir -p dist
          VERSION=${GITHUB_REF##*/}
          echo "Building version $VERSION"
          GOOS=linux GOARCH=amd64 go build -o dist/cf-ip-ranges-exporter-$VERSION-linux-amd64 ./...
          GOOS=windows GOARCH=amd64 go build -o dist/cf-ip-ranges-exporter-$VERSION-windows-amd64.exe ./...

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*

